---
title: ""
format: html
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(FactoMineR)
library(ggplot2)
library(scatterplot3d)
library(tidyr)
theme_set(theme_bw() + theme(strip.background = element_rect(fill = NA)))
```

[Link to the slides](../material/pca.pdf)

## (Simulated) Data

I simulated a 3-dimensional dataset to illustrate this section.
In this example, there are:

  * 6 (simulated human) subjects, 3 of them are healthy, and 3 of them have [insert here your favorite auto-immune disease],
  * 3 variables are measured on these subjects: CRP[^1], Serum Creatinine (SC)[^2], and Cystatin C (CC)[^3]. 

[^1]: CRP (*C-reactive protein*) is a clinical marker of inflammation. "In healthy adults, the normal concentrations of CRP varies between 0.8 mg/L and 3.0 mg/L. (..) CRP concentrations between 2 and 10 mg/L are considered as metabolic inflammation[.]" [Source: Wikipedia](https://en.wikipedia.org/wiki/C-reactive_protein)

[^2]: "Serum creatinine (a blood measurement) is an important indicator of kidney function, because it is an easily measured byproduct of muscle metabolism that is excreted unchanged by the kidneys. (...) The reference interval is 0.6â€“1.3 mg/dL." [Source: Wikipedia](https://en.wikipedia.org/wiki/Creatinine)

[^3]: "Cystatin C (...) is mainly used as a biomarker of kidney function. (...) Across different studies, the mean reference interval (as defined by the 5th and 95th percentile) was between 0.52 and 0.98 mg/L." [Source: Wikipedia](https://en.wikipedia.org/wiki/Cystatin_C)

[Link to dataset](../material/simulated_data.xlsx)

With this (somewhat not so realistic) example, I want to illustrate a situation where one variable stands alone (CRP) and the other two are very correlated, and at the same time, I want two groups of subjects that have very different mean CRPs. The values are reported in the table below.

```{r simulated data, echo = FALSE, warning = FALSE, results='asis'}
set.seed(259702)
center <- \(x) {x-mean(x)}
i <- sample(1:6)
simul <- tibble(
  status = factor(rep(c("H", "D"), each = 3), levels = c("H", "D")),
  # CRP  = center(rnorm(6)) + rep(c(1.5, 6), each = 3),
  MASS::mvrnorm(
      n = 6,
      mu = c(0, 1, 0.7),
      Sigma = Matrix::bdiag(1, toeplitz(c(1, 0.8))), 
      empirical = TRUE) %>% 
    as_tibble() %>%
    dplyr::rename(
      CRP = V1,
      SC = V2,
      CC = V3) %>%
    mutate(CRP = CRP + (as.numeric(status) - 1) * 4.5 + 1.5) %>%
    mutate(
      CRP = unlist(tapply(CRP, status, sample)),
      SC = SC[i], CC = CC[i]) 
)

pander::pandoc.table(simul)
```

Below is represented the correlation matrix as a correlogram.

```{r simul correlation}
cormat <- cor(simul[, -1])
cormat %>% 
  as_tibble(rownames = "row") %>% 
  pivot_longer(-1, names_to = "col") %>%
  mutate(row = factor(row, levels = c("SC", "CRP", "CC"))) %>%
  ggplot(aes(col, row, fill = value)) +
  geom_tile(show.legend = FALSE, color = "white", linewidth = 1) + 
  geom_text(aes(label = round(value, 2)), color = "white") +
  scale_x_discrete(position = "top") +
  scale_fill_distiller(palette = "Spectral") +
  coord_equal() + 
  labs(x = "", y = "")

```

And the 3D plot representing all the data is shown below.

```{r scatterplot}
with(simul, scatterplot3d(x = SC, y = CC, z = CRP, color = as.numeric(status), pch = 16, cex.symbols = 2, type="h"))
```



```{r pca}
res.pca <- PCA(simul, quali.sup = "status", graph = FALSE)

factoextra::fviz_screeplot(res.pca)
plotellipses(res.pca)
plot.PCA(res.pca, choix = "var")

```



